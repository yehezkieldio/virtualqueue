services:
  postgres:
    container_name: virtualqueue-postgres
    profiles: [development]
    image: postgres:latest
    environment:
      POSTGRES_USER: elizielx
      POSTGRES_PASSWORD: elizielx
      POSTGRES_DB: virtualqueue
    ports:
      - "5432:5432"
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - virtualqueue-network
  prometheus:
    image: prom/prometheus:latest
    container_name: virtualqueue-prometheus
    profiles: [observability]
    volumes:
      - ./o11y/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"
    networks:
      - virtualqueue-network
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:latest
    container_name: virtualqueue-postgres-exporter
    profiles: [observability]
    environment:
      DATA_SOURCE_NAME: "postgresql://elizielx:elizielx@postgres:5432/virtualqueue?sslmode=disable"
    ports:
      - "9187:9187"
    networks:
      - virtualqueue-network
    depends_on:
      - postgres
  grafana:
    image: grafana/grafana:latest
    container_name: virtualqueue-grafana
    profiles: [observability]
    volumes:
      - grafana_data:/var/lib/grafana
      # - ./o11y/grafana/provisioning:/etc/grafana/provisioning
      # - ./o11y/grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel,grafana-worldmap-panel
      - GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH=/var/lib/grafana/dashboards/overview.json
    ports:
      - "3000:3000"
    networks:
      - virtualqueue-network
    depends_on:
      - prometheus
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: virtualqueue-jaeger
    profiles: [observability]
    environment:
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
      - COLLECTOR_OTLP_ENABLED=true
    ports:
      - "6831:6831/udp"
      - "6832:6832/udp"
      - "5778:5778"
      - "16686:16686"
      - "4317:4317"
      - "4318:4318"
      - "14250:14250"
      - "14268:14268"
      - "14269:14269"
      - "9411:9411"
    networks:
      - virtualqueue-network
  dragonfly:
    image: "docker.dragonflydb.io/dragonflydb/dragonfly"
    container_name: virtualqueue-dragonfly
    profiles: [development]
    command: --cluster_mode=emulated --lock_on_hashtags --maxmemory=2gb
    ulimits:
        memlock: -1
    ports:
        - "6379:6379"
    networks:
        - virtualqueue-network
    volumes:
        - dragonfly_data:/data

volumes:
  postgres_data:
    name: virtualqueue-postgres-data
  prometheus_data:
    name: virtualqueue-prometheus-data
  grafana_data:
    name: virtualqueue-grafana-data
  dragonfly_data:
    name: virtualqueue-dragonfly-data

networks:
  virtualqueue-network:
    name: virtualqueue-network
    driver: bridge